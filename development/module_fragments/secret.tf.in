{% macro var_item(type=True) -%}
    secret_is_param         = optional(bool)
    secret_random_init_key  = optional(string)
    secret_random_init_map  = optional(map(string)){% if type %}
    secret_random_init_type = optional(string){% endif %}
{%- endmacro %}

{% macro var(precedence="_default", key=None, map=None, type=True) -%}
variable "secret_is_param{{ precedence }}" {
  type    = bool
  default = false
}

variable "secret_random_init_key{{ precedence }}" {
  type        = string
  default     = {{  '"' ~ key ~ '"' if key else "null" }}
  description = "If provided, the initial value with be a map with the random secret at this key, otherwise the initial value will be the secret itself. Ignored for TLS keys."
}

variable "secret_random_init_map{{ precedence }}" {
  type        = map(string)
  default     = {{ ({} if map is none else map) | tf_map }}
  description = "If provided, will be merged with the secret key, if provided"
}{% if type %}

variable "secret_random_init_type{{ precedence }}" {
  type    = string
  default = "password"
  validation {
    condition     = var.secret_random_init_type{{ precedence }} == null ? true : contains(["password", "ssh_key", "tls_key"], var.secret_random_init_type{{ precedence }})
    error_message = "Invalid random init type"
  }
}{% endif %}

variable "secret_random_init_value_map" {
  type        = map(string)
  description = "For each secret, if an initial value is provided, the secret will be initialized with that value, otherwise a random password."
  default     = {}
}

variable "secret_random_special_character_set{{ precedence }}" {
  type        = string
  default     = "!@#$%&*()-_=+[]{}<>:?"
  description = "Has no effect unless a secret is a password"
}
{%- endmacro %}

{% macro map_item(precedence="_default", source="var", source_map="local.lx_map", param=True, type=True) -%}
    {% if param %}secret_is_param{{ precedence }}       = {{ source }}.secret_is_param{{ precedence }}
    {% endif %}secret_map                               = {{ source_map }}
    secret_random_init_key{{ precedence }}              = {{ source }}.secret_random_init_key{{ precedence }}
    secret_random_init_map{{ precedence }}              = {{ source }}.secret_random_init_map{{ precedence }}{% if type %}
    secret_random_init_type{{ precedence }}             = {{ source }}.secret_random_init_type{{ precedence }}{% endif %}
    secret_random_init_value_map                        = {{ source }}.secret_random_init_value_map
    secret_random_special_character_set{{ precedence }} = {{ source }}.secret_random_special_character_set{{ precedence }}
{%- endmacro %}
