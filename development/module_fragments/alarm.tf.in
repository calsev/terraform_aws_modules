
{% macro var_item() -%}
    alarm_map = optional(map(object({
      alarm_action_enabled                = optional(bool)
      alarm_description                   = string # Human-friendly description
      alarm_name                          = string # Human-friendly name
      alert_level                         = optional(string)
      metric_name                         = optional(string)
      metric_namespace                    = optional(string)
      statistic_comparison_operator       = optional(string)
      statistic_evaluation_period_count   = optional(number)
      statistic_evaluation_period_seconds = optional(number)
      statistic_for_metric                = optional(string)
      statistic_threshold_percentile      = optional(number)
      statistic_threshold_value           = optional(number)
    })))
{%- endmacro %}

{% macro var_default_type() -%}
  type = map(object({
    alarm_action_enabled                = optional(bool)
    alarm_description                   = string # Human-friendly description
    alarm_name                          = string # Human-friendly name
    alert_level                         = optional(string)
    metric_name                         = optional(string)
    metric_namespace                    = optional(string)
    statistic_comparison_operator       = optional(string)
    statistic_evaluation_period_count   = optional(number)
    statistic_evaluation_period_seconds = optional(number)
    statistic_for_metric                = optional(string)
    statistic_threshold_percentile      = optional(number)
    statistic_threshold_value           = optional(number)
  }))
{%- endmacro %}

{% macro map(map, def_map) -%}
module "alarm_map" {
  source              = "{{ module_up }}/cw/alarm_map"
  alarm_map           = var.{{ map }}
  alarm_map_default   = var.{{ def_map }}
  alert_level_default = var.alert_level_default
  monitor_data        = var.monitor_data
  name_map            = module.name_map.data
}
{%- endmacro %}

{% macro create(dimension, dim_val="v.name_effective") -%}
  create_alarm_1_list = flatten([
    for k, v in local.lx_map : [
      for k_alarm, v_alarm in v.alarm_map : merge(v, v_alarm, {
        metric_dimension_map = {
          {{ dimension }} = {{ dim_val }}
        }
        k_all = "${k}_${k_alarm}"
      })
    ]
  ])
  create_alarm_x_map = {
    for v in local.create_alarm_1_list : v.k_all => v
  }
{%- endmacro %}

{% macro out() -%}
        alarm = {
          for k_alarm, v_alarm in v.alarm_map : k_alarm => module.alarm.data["${k}_${k_alarm}"]
        }
{%- endmacro %}

{% macro main(prepend) -%}
module "alarm" {
  source               = "../../cw/metric_alarm"
  alarm_map            = local.create_alarm_x_map
  name_prepend_default = "{{ prepend }}"
  std_map              = var.std_map
}
{%- endmacro %}
