{{ name.map() }}

locals {
  create_policy_map = {
    for k, v in local.lx_map : k => v if v.policy_create
  }
  {{ iam.policy_l0() }}
  l1_map = {
    for k, v in local.l0_map : k => merge(v, module.name_map.data[k], {
      policy_create = v.policy_create == null ? var.policy_create_default : v.policy_create
    })
  }
  l2_map = {
    for k, v in local.l0_map : k => {
    }
  }
  lx_map = {
    for k, _ in local.l0_map : k => merge(local.l1_map[k], local.l2_map[k])
  }
  output_data = {
    for k, v in local.lx_map : k => merge(
      {
        for k_attr, v_attr in v : k_attr => v_attr if !contains(["iam_policy_json"], k_attr)
      },
      {
        iam_policy_doc = jsondecode(v.iam_policy_json)
        iam_policy_arn = v.policy_create ? aws_iam_policy.policy[k].arn : null
      }
    )
  }
}
