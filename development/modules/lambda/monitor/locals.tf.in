{{ alarm.map(map="function_map", def_map="function_alarm_map_default") }}

{{ name.map() }}

locals {
  {{ alarm.create(dimension="FunctionName", dim_val="v.lambda_name") }}
  l0_map = {
    for k, v in var.function_map : k => merge(v, {
      lambda_name = v.name_effective # Preserve before merging name map
    })
  }
  l1_map = {
    for k, v in local.l0_map : k => merge(v, module.name_map.data[k], module.alarm_map.data[k], {
    })
  }
  l2_map = {
    for k, v in local.l0_map : k => {
    }
  }
  lx_map = {
    for k, _ in local.l0_map : k => merge(local.l1_map[k], local.l2_map[k])
  }
  output_data = {
    for k, v in local.lx_map : k => merge(
      {
        for k_attr, v_attr in v : k_attr => v_attr if !contains([], k_attr)
      },
      {
        {{ alarm.out() }}
      },
    )
  }
}
